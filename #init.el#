
;; package

(require 'package)
(add-to-list 'package-archives
            '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives
	     '("melpa-stable" . "http://stable.melpa.org/packages/") t)
 (add-to-list 'package-archives
 	     '("melpa" . "http://melpa.org/packages/") t)
(package-initialize)

;; Add in your own as you wish:
(defvar my-packages
  '(
    ;;;; Globals
    helm
    smex
    evil
    evil-surround
    evil-visualstar
    window-numbering
    editorconfig
    fill-column-indicator
    exec-path-from-shell
    magit

    projectile
    helm-projectile
    grizzl

    company
    helm-company
    idle-highlight-mode
    minimap

    ;; for tabbar mode
    tabbar

    ;;;; Colors & Appearance
    solarized-theme
    color-theme-sanityinc-solarized
    color-theme-sanityinc-tomorrow

    ;;;; Lisp
    ;; smartparens
    paredit 
    rainbow-delimiters

    ;;;; Clojure
    clojure-mode
    cider
    clj-refactor
    )
  "cider list of packages to ensure are installed at launch.")

(when (not package-archive-contents)
  (package-refresh-contents))

(dolist (p my-packages)
  (when (not (package-installed-p p))
    (package-install p)))



;;;; Globals

(global-set-key (kbd "C-,") 'other-window)
(global-set-key (kbd "M-/") 'comment-or-uncomment-region)
(global-set-key (kbd "C-?") 'help-command)
(global-set-key (kbd "C-S-s") 'save-buffer)
(global-set-key (kbd "C-<") 'previous-buffer)
(global-set-key (kbd "C->") 'next-buffer)

(scroll-bar-mode -1) ;; disables scroll bars
(setq visible-bell 1) ;; disables audible bells & enables visible bell
(tool-bar-mode -1)
(menu-bar-mode -1)

;; indentation

(setq-default indent-tabs-mode nil)
(setq tab-width 2)


;; helm

(require 'helm-config)
(helm-mode 1)
(global-set-key (kbd "M-x") 'helm-M-x)

;; smex
(global-set-key (kbd "M-X") 'smex)

;; ido
(global-set-key (kbd "M-A") 'ido-switch-buffer)
(global-set-key (kbd "M-a") 'helm-mini)

;; evil

(require 'evil)
(require 'evil-visualstar)
(evil-mode 1)
(global-evil-surround-mode 1)



;; window-numbering

(require 'window-numbering)
(window-numbering-mode 1)

;; editorconfig

(require 'editorconfig)

;; fill-column-indicator

(require 'fill-column-indicator)
(setq fci-rule-column 80)
(setq whitespace-style '(face trailing))
(setq fci-rule-color "#DDD")
(add-hook 'text-mode-hook 'fci-mode)
(add-hook 'prog-mode-hook 'fci-mode)

;; exec-path-from-shell - fix for OS X path problem
(when (memq window-system '(mac ns))
  (exec-path-from-shell-initialize))


;; magit
(global-set-key (kbd "C-x g") 'magit-status)

;; projectile
(projectile-global-mode)
(setq projectile-indexing-method 'alien)
(setq projectile-enable-caching t)

;; company
(add-hook 'after-init-hook 'global-company-mode)

(global-set-key (kbd "C-SPC") 'company-complete)

(defun complete-or-indent ()
  (interactive)
  (if (company-manual-begin)
      (company-complete-common)
    (indent-according-to-mode)))


;; remove annoyint splassh screen
(setq inhibit-splash-screen t)


;; font size
;;
(set-face-attribute 'default (selected-frame) :height 130)
(global-set-key (kbd "C--") 'text-scale-decrease)
(global-set-key (kbd "C-=") 'text-scale-increase)
(global-set-key (kbd "C-0") (kbd "C-x C-0"))


;;;; Colors & Appearance

;(load-theme 'solarized-dark t)

(add-to-list 'custom-theme-load-path "~/.emacs.d/custom-themes")
(add-to-list 'custom-theme-load-path "~/.emacs.d.tony/custom-themes")

(load-theme 'blackboard t)
;;(load-theme 'railscasts t)
;;(load-theme 'tomorrow-night-bright t)
;;(load-theme 'tango-dark t)



;; rainbow-delimiters
(require 'rainbow-delimiters)
(add-hook 'clojure-mode-hook 'rainbow-delimiters-mode)
(add-hook 'emacs-lisp-mode-hook 'rainbow-delimiters-mode)

;;;; Clojure

;; clojure-mode

;; cider

(require 'cider)

(setq cider-prompt-save-file-on-load nil)
(setq cider-auto-select-error-buffer nil)
(setq cider-show-error-buffer nil)
(define-key cider-mode-map (kbd "C-c C-v") 'cider-visit-error-buffer)
(cider-repl-toggle-pretty-printing)

;; clj-refactor

(add-hook 'cider-mode-hook (lambda ()
			     (clj-refactor-mode 1)
			     (cljr-add-keybindings-with-prefix "C-x C-r")))

;;;; Platform-specific stuff

;; for tmux
;; (add-hook 'after-make-frame-functions
;;   (lambda ()
;;     (when (not window-system)
;;       ;;(normal-erase-is-backspace-mode 1)
;;       ;(global-set-key (kbd "C-h") 'delete-backward-char)
;;       )))

;; for OSX
(when (eq system-type 'darwin) ;; mac specific settings
   (setq mac-option-modifier 'alt)
   (setq mac-command-modifier 'meta)
   (global-set-key [kp-delete] 'delete-char) ;; sets fn-delete to be right-delete
     )

;; for Windows
(when (or (eq system-type 'windows-nt) (eq system-type 'msdos))
   (setenv "PATH" (concat "C:\\gnuwin\\bin;" (getenv "PATH")))
   (setq find-program "C:\gnuwin\\bin\\find.exe"
	 grep-program "C:\\gnuwin\\bin\\grep.exe"))


;;;;;;;; added by Custom
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("e16a771a13a202ee6e276d06098bc77f008b73bbac4d526f160faa2d76c1dd0e" "8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4" "bb08c73af94ee74453c90422485b29e5643b73b05e8de029a6909af6a3fb3f58" "06f0b439b62164c6f8f84fdda32b62fb50b6d00e8b01c2208e55543a6337433a" "628278136f88aa1a151bb2d6c8a86bf2b7631fbea5f0f76cba2a0079cd910f7d" "82d2cac368ccdec2fcc7573f24c3f79654b78bf133096f9b40c20d97ec1d8016" "4cf3221feff536e2b3385209e9b9dc4c2e0818a69a1cdb4b522756bcdf4e00a4" "4aee8551b53a43a883cb0b7f3255d6859d766b6c5e14bcb01bed572fcbef4328" "1b8d67b43ff1723960eb5e0cba512a2c7a2ad544ddb2533a90101fd1852b426e" "d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" default)))
 '(flx-ido-mode t)
 '(magit-use-overlays nil))


;; Don't wait for any other keys after escape is pressed.
;; 
(setq evil-esc-delay 0)

;; evil mode keybindings
;;
(define-key evil-normal-state-map (kbd ";") 'evil-ex)
;; space up-down 
(define-key evil-normal-state-map (kbd "<S-SPC>") 'evil-scroll-page-up)
(define-key evil-normal-state-map (kbd "SPC") 'evil-scroll-page-down)
;; window left/right 
(define-key evil-normal-state-map (kbd "<left>")  'windmove-left)
(define-key evil-normal-state-map (kbd "<right>") 'windmove-right)
(global-set-key (kbd "C-h") 'windmove-left)
(global-set-key (kbd "C-l") 'windmove-right)
(global-set-key (kbd "C-j") 'windmove-down)
(global-set-key (kbd "C-k") 'windmove-up)


;; tabbar
;;
(tabbar-mode 1)
(global-set-key [M-left] 'tabbar-backward-tab)
(global-set-key [M-right] 'tabbar-forward-tab)
;; tabbar styling
(load "~/.emacs.d/tabbar-tweak.el")


;; buffers and windows
;;
(global-set-key (kbd "M-k") 'kill-this-buffer)
(global-set-key (kbd "M-K") 'kill-this-buffer-and-window)
(global-set-key (kbd "M-w") 'delete-window)


;; cider/emacs-lisp
(global-set-key (kbd "M-e") 'eval-last-sexp)


;; projectile
;; 
(setq projectile-completion-system 'grizzl) ;; fuzzzy support
;; tags, buffers
(global-set-key (kbd "M-a") 'projectile-switch-to-buffer)
(global-set-key (kbd "M-t") 'projectile-find-file)
(global-set-key (kbd "M-f") 'projectile-recentf)
(global-set-key (kbd "M-n") 'projectile-find-dir)
(global-set-key (kbd "M-p") 'projectile-switch-project)
(global-set-key (kbd "M-g") 'projectile-ag)
(global-set-key (kbd "M-i") 'projectile-find-tag)

;;(global-set-key (kbd "M-e") (kbd "C-x C-e"))
(global-set-key (kbd "M-r") 'eval-buffer)
(global-set-key (kbd "M-e") 'eval-defun) 


;; whenever an external process changes a file underneath emacs, and there
;; was no unsaved changes in the corresponding buffer, just revert its
;; content to reflect what's on-disk.
(global-auto-revert-mode 1)

;; M-x shell is a nice shell interface to use, let's make it colorful.  If
;; you need a terminal emulator rather than just a shell, consider M-x term
;; instead.
(autoload 'ansi-color-for-comint-mode-on "ansi-color" nil t)
(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)


;; Use the clipboard, pretty please, so that copy/paste "works"
(setq x-select-enable-clipboard t)

;; Copy/paste with C-c and C-v and C-x, check out C-RET too
(cua-mode)

(global-hl-line-mode)			; highlight current line
(global-linum-mode 0)			; add line numbers on the left

;; wordwrapoff by default
(setq-default truncate-lines 1)

;; avoid compiz manager rendering bugs
;;(add-to-list 'default-frame-alist '(alpha . 100))


;; esc quits
;;
(define-key evil-normal-state-map [escape] 'keyboard-quit)
(define-key evil-visual-state-map [escape] 'keyboard-quit)
(define-key minibuffer-local-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-ns-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-completion-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-must-match-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-isearch-map [escape] 'minibuffer-keyboard-quit)


